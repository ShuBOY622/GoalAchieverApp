# Docker environment configuration for all services
spring:
  profiles:
    active: docker
  
  # Database configurations will be overridden by environment variables
  datasource:
    hikari:
      connection-timeout: 20000
      maximum-pool-size: 10
      minimum-idle: 5
      idle-timeout: 300000
      max-lifetime: 1800000
  
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect
        format_sql: false
        jdbc:
          time_zone: UTC
    database-platform: org.hibernate.dialect.MySQL8Dialect
    database: mysql
  
  # Kafka configuration will be overridden by environment variables
  kafka:
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      acks: all
      retries: 3
      retry-backoff-ms: 1000
      request-timeout-ms: 30000
      delivery-timeout-ms: 120000
      batch-size: 16384
      linger-ms: 1
      buffer-memory: 33554432
      properties:
        spring:
          json:
            add:
              type:
                headers: false
    
    consumer:
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      auto-offset-reset: earliest
      session-timeout-ms: 30000
      heartbeat-interval-ms: 3000
      max-poll-interval-ms: 300000
      enable-auto-commit: false
      properties:
        spring:
          json:
            trusted:
              packages: "org.goalapp.common.dto,org.goalapp.*.dto"
    
    listener:
      ack-mode: manual_immediate
      concurrency: 1

# Logging configuration
logging:
  level:
    org.goalapp: INFO
    org.springframework.kafka: WARN
    org.hibernate.SQL: WARN
    org.hibernate.type.descriptor.sql.BasicBinder: WARN
    com.mysql: WARN
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"

# Management and monitoring
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: always
  metrics:
    export:
      prometheus:
        enabled: true

# Kafka Topics Configuration
kafka:
  topics:
    notification: notification-topic
    create-shared-goal: create-shared-goal-topic
    goal-created: goal-created-topic