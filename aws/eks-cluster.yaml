apiVersion: eksctl.io/v1alpha5
kind: ClusterConfig

metadata:
  name: goalapp-cluster
  region: us-east-1
  version: "1.28"

# VPC Configuration
vpc:
  enableDnsHostnames: true
  enableDnsSupport: true
  cidr: "10.0.0.0/16"
  subnets:
    public:
      us-east-1a:
        cidr: "10.0.1.0/24"
      us-east-1b:
        cidr: "10.0.2.0/24"
      us-east-1c:
        cidr: "10.0.3.0/24"
    private:
      us-east-1a:
        cidr: "10.0.11.0/24"
      us-east-1b:
        cidr: "10.0.12.0/24"
      us-east-1c:
        cidr: "10.0.13.0/24"

# IAM Configuration
iam:
  withOIDC: true
  serviceAccounts:
    - metadata:
        name: aws-load-balancer-controller
        namespace: kube-system
      wellKnownPolicies:
        awsLoadBalancerController: true
    - metadata:
        name: ebs-csi-controller-sa
        namespace: kube-system
      wellKnownPolicies:
        ebsCSIController: true
    - metadata:
        name: cluster-autoscaler
        namespace: kube-system
      wellKnownPolicies:
        autoScaler: true

# Node Groups
nodeGroups:
  - name: goalapp-workers
    instanceType: t3.medium
    desiredCapacity: 3
    minSize: 2
    maxSize: 6
    volumeSize: 50
    volumeType: gp3
    privateNetworking: true
    availabilityZones: ["us-east-1a", "us-east-1b", "us-east-1c"]
    
    # Security Groups
    securityGroups:
      attachIDs: []
      withShared: true
      withLocal: true
    
    # IAM
    iam:
      attachPolicyARNs:
        - arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy
        - arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy
        - arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly
        - arn:aws:iam::aws:policy/AmazonS3ReadOnlyAccess
        - arn:aws:iam::aws:policy/CloudWatchAgentServerPolicy
      withAddonPolicies:
        autoScaler: true
        ebs: true
        efs: true
        albIngress: true
        cloudWatch: true
    
    # Labels and Tags
    labels:
      role: worker
      environment: production
    tags:
      Environment: production
      Project: goalapp
      ManagedBy: eksctl
    
    # User Data
    preBootstrapCommands:
      - "yum update -y"
      - "yum install -y amazon-cloudwatch-agent"
    
    # Kubelet Configuration
    kubeletExtraConfig:
      kubeReserved:
        cpu: "100m"
        memory: "100Mi"
        ephemeral-storage: "1Gi"
      systemReserved:
        cpu: "100m"
        memory: "100Mi"
        ephemeral-storage: "1Gi"

# Managed Node Groups for different workloads
managedNodeGroups:
  - name: goalapp-backend-nodes
    instanceTypes: ["t3.medium", "t3.large"]
    minSize: 2
    maxSize: 8
    desiredCapacity: 3
    privateNetworking: true
    availabilityZones: ["us-east-1a", "us-east-1b", "us-east-1c"]
    
    labels:
      role: backend
      workload-type: microservices
    
    taints:
      - key: workload-type
        value: backend
        effect: NoSchedule
    
    tags:
      Environment: production
      Project: goalapp
      NodeType: backend
    
    iam:
      withAddonPolicies:
        autoScaler: true
        ebs: true
        cloudWatch: true

  - name: goalapp-frontend-nodes
    instanceTypes: ["t3.small", "t3.medium"]
    minSize: 1
    maxSize: 4
    desiredCapacity: 2
    privateNetworking: true
    availabilityZones: ["us-east-1a", "us-east-1b"]
    
    labels:
      role: frontend
      workload-type: web
    
    taints:
      - key: workload-type
        value: frontend
        effect: NoSchedule
    
    tags:
      Environment: production
      Project: goalapp
      NodeType: frontend

# Add-ons
addons:
  - name: vpc-cni
    version: latest
    configurationValues: |-
      env:
        ENABLE_PREFIX_DELEGATION: "true"
        WARM_PREFIX_TARGET: "1"
  - name: coredns
    version: latest
  - name: kube-proxy
    version: latest
  - name: aws-ebs-csi-driver
    version: latest
    wellKnownPolicies:
      ebsCSIController: true

# CloudWatch Logging
cloudWatch:
  clusterLogging:
    enable: ["api", "audit", "authenticator", "controllerManager", "scheduler"]
    logRetentionInDays: 30

# Secrets Encryption
secretsEncryption:
  keyARN: "arn:aws:kms:us-east-1:ACCOUNT_ID:key/KEY_ID"

# Git Ops
gitops:
  flux:
    gitProvider: github
    flags:
      owner: your-github-username
      repository: goalapp-gitops
      private: true
      branch: main
      namespace: flux-system
      path: clusters/production